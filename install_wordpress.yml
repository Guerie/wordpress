---

- name: ping
  hosts: group_wordpress
  become: yes
  tasks:
    - name: ping_guerie_serv
      ping:

    # PHP
    - name: Add the ondrej PHP PPA
      apt_repository:
        repo: 'ppa:ondrej/php'

    - name: install PHP
      package:
        name: "{{ item }}"
        state: present
      loop:
        - php
        - php-fpm
        - php-mysql
        - php-xml

    - name: remove apache2
      apt:
        name: apache2
        state: absent
        purge: yes
    # MySQL
    - name: install mysql
      package:
        name: "{{ item }}"
        state: present
      loop:
        - mysql-server
        - python-mysqldb

    - name: Create mysqld.cnf
      template:
        src: templates/mysql/mysqld.cnf.j2
        dest: /etc/mysql/mysql.conf.d/mysqld.cnf
      notify: restart mysql

    - name: Generate new root password
      command: openssl rand -hex 7
      args:
        creates: /root/.my.conf
      register: mysql_new_root_pass

    - name: remove anonymous users
      mysql_user:
        name: ""
        state: absent
      when: mysql_new_root_pass.changed

    - name: remove test database
      mysql_db:
        name: test
        state: absent
      when: mysql_new_root_pass.changed

    - name: Output new root password
      debug:
        msg: "New root password is {{ mysql_new_root_pass.stdout }}"
      when: mysql_new_root_pass.changed

    - name: Update root password
      mysql_user:
        name: root
        host: "{{ item }}"
        password: "{{ mysql_new_root_pass.stdout }}"
      loop:
        - "{{ ansible_hostname }}"
        - 127.0.0.1
        - ::1
        - localhost
      when: mysql_new_root_pass.changed

    - name: Create my.cnf
      template:
        src: templates/mysql/my.cnf.j2
        dest: /root/.my.cnf

    #Nginx
    - name: install Nginx
      package:
        name: nginx
        state: present

    - name: start Nginx
      service:
        name: nginx
        state: started
        enabled: yes

    - name: Check PHP version
      command: php --version
      register: php_version
    - set_fact:
        fpm_sock: /run/php/php7.{{ php_version.stdout.split(" ")[1].split(".")[1] }}-fpm.sock
      when: ansible_distribution == 'Ubuntu'

    - name: create nginx config
      template:
        src: templates/nginx/default.j2
        dest: /etc/nginx/sites-available/default
      notify: restart nginx

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted

  handlers:
    - name: restart mysql
      service:
        name: mysql
        state: restarted

# WordPress
    - name: Unzip WordPress
      unarchive:
        src: files/wordpress-5.3.2-fr_FR.zip
        dest: /tmp
        creates: /tmp/wordpress/wp-settings.php
    - name: Create project folder
      file:
        dest: /var/www/book.example.com
        state: directory
    - name: Copy WordPress files
      command: cp -a /tmp/wordpress/. /var/www/book.example.com
      args:
        creates: /var/www/book.example.com/wp-settings.php
